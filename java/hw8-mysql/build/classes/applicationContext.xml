<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.1.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd ">

<!-- 扫描com.hf包里下的所有class文件，配置注解的类全都装入容器中进行管理 -->
<context:component-scan base-package="edu.zju.chwl" />
<!-- 添加注解驱动 -->
<mvc:annotation-driven />

<!-- 配置dbcp数据库连接池 -->
<!-- 加载配置文件 -->
<context:property-placeholder location="classpath:db.properties"/>
<!-- 数据库连接池 -->
<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
       <property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="maxActive" value="30"/>
		<property name="maxIdle" value="5"/>
</bean>

<!-- 配置事务管理  -->
<bean id="transactionManager"
    class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource" />
</bean>


<!-- 配置会话工厂SqlSessionFactory -->

<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">

  <!-- 数据源 -->
  <property name="dataSource" ref="dataSource"/>
  
  <!-- 加载 SqlMapConfig.xml -->
  <property name="configLocation" value="classpath:SqlMapConfig.xml"/>

</bean>


<!-- 在spring容器中配置mapper的扫描器
产生的动态代理对象在spring的容器中自动注册，bean的id就是mapper类名（首字母小写）
 -->
<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
  <!-- 指定扫描包的路径，就是mapper接口的路径，多个包中间以 半角逗号   -->
  <property name="basePackage" value="edu.zju.chwl.mapper"/>
  <!-- 配置sqlSessionFactoryBeanName -->
  <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>

</bean>

<!-- MapperFactoryBean 创建的代理类实现了GroupMapper接口,并且注入到应用程序中，这样不用写实现类 -->
<bean id="groupMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
    <property name="mapperInterface" value="edu.zju.chwl.mapper.GroupMapper" />
    <property name="sqlSessionFactory" ref="sqlSessionFactory" />
</bean>

<bean id="memberMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
    <property name="mapperInterface" value="edu.zju.chwl.mapper.MemberMapper" />
    <property name="sqlSessionFactory" ref="sqlSessionFactory" />
</bean>


</beans>